
# using NB copula to simulate PNAS and ROSMAP NC Oli
# cor structure from cscore on top 500: /gpfs/gibbs/pi/zhao/xs282/validation/mean_cor/prepare_NB_simu_PNAS_and_ROSMAP_NC_Oli_11_12_2023.R
# marginal fit is from /gpfs/gibbs/pi/zhao/xs282/validation/mean_cor/marginal_fit_PNAS_NC_Oli.R
#                      /gpfs/gibbs/pi/zhao/xs282/validation/mean_cor/marginal_fit_ROSMAP_NC_Oli.R
# kernel smoothing fit is from: /gpfs/gibbs/pi/zhao/xs282/validation/mean_cor/KS_fit_PNAS_and_ROSMAP_NC_Oli_11_12_2023.R


setwd("/gpfs/gibbs/pi/zhao/xs282/validation/")
source("compare_simulation/NB_copula/NB_copula_function.R")
source("/gpfs/gibbs/pi/zhao/xs282/coexp-sc/IRLS_CSCORE/CscoreSimplifiedIRLS.R")
source("/gpfs/gibbs/pi/zhao/xs282/validation/cscore_real_data_function.R")

library(pheatmap)
library(Seurat)
library(dplyr)


################################ ROSMAP ###################################
set.seed(10212023)
count_ex <- readRDS("marginal_fit/ROSMAP_NC_Oli_count.rds")
marginal_fit_fn <- 'marginal_fit/ROSMAP_NC_Oli_marginal_fit.rds'
vanilla_ex <- readRDS(marginal_fit_fn)
log10mu <- vanilla_ex$mu
gene_name <- vanilla_ex$gene
names(log10mu) <- gene_name
mu <- 10^log10mu
sum(is.na(mu))

cell_idx <- 1:ncol(count_ex)
cell_name <- colnames(count_ex)[cell_idx]
seq_depth <- colSums(count_ex)[cell_idx]

# use the sampled mean and the trend between mean and alpha to get corresponding alpha
km_Ex5 <- readRDS('marginal_fit/ROSMAP_NC_Oli_ks_fit_5.rds')
fitted_trend <- data.frame(mu=km_Ex5$x, alpha=km_Ex5$y)
log10alpha <- rep(NA,nrow(vanilla_ex))
names(log10alpha) <- vanilla_ex$gene
for (i in 1:nrow(vanilla_ex)){
  idx <- which.min(abs(log10mu[i]-fitted_trend$mu))
  log10alpha[i] <- fitted_trend$alpha[idx]
}
alpha <- 10^log10alpha

# use correlation from cscore
# ori_ests <- readRDS("marginal_fit/ROSMAP_NC_Oli_cscore_cor.rds")
ori_ests <- readRDS("marginal_fit/ROSMAP_NC_Oli_cscore_cor1000.rds")
filtered_ori_ests <- ori_ests$est
filtered_ori_ests[MatrixBH(ori_ests$p_value) > 0.05] <- 0
# filtered_ori_ests[filtered_ori_ests<0.1] <- 0
filtered_ori_ests[abs(filtered_ori_ests)<0.1] <- 0

cor_mat <- (filtered_ori_ests+t(filtered_ori_ests))/2
simu_cscore_cor <- NB_copula(mu, gene_name, seq_depth, cell_name, alpha, 
                             cor_mat, ind=F, seed=11132023)
# saveRDS(simu_cscore_cor, "mean_cor/simu/ROSMAP_NC_Oli_cscore_cor_NB_simu.rds")
# saveRDS(simu_cscore_cor, "mean_cor/simu/ROSMAP_NC_Oli_cscore_cor_NB_simu1000.rds")
# saveRDS(simu_cscore_cor, "mean_cor/simu/ROSMAP_NC_Oli_cscore_cor_NB_simu1000_thresh.rds")
saveRDS(simu_cscore_cor, "mean_cor/simu/ROSMAP_NC_Oli_cscore_cor_NB_simu1000_abs_thresh.rds")

################################ PNAS ###################################
set.seed(10212023)
count_ex <- readRDS("marginal_fit/PNAS_NC_Oli_count.rds")
marginal_fit_fn <- 'marginal_fit/PNAS_NC_Oli_marginal_fit.rds'
vanilla_ex <- readRDS(marginal_fit_fn)
log10mu <- vanilla_ex$mu
gene_name <- vanilla_ex$gene
names(log10mu) <- gene_name
mu <- 10^log10mu
sum(is.na(mu))

cell_idx <- 1:ncol(count_ex)
cell_name <- colnames(count_ex)[cell_idx]
seq_depth <- colSums(count_ex)[cell_idx]

# use the sampled mean and the trend between mean and alpha to get corresponding alpha
km_Ex5 <- readRDS('marginal_fit/PNAS_NC_Oli_ks_fit_5.rds')
fitted_trend <- data.frame(mu=km_Ex5$x, alpha=km_Ex5$y)
log10alpha <- rep(NA,nrow(vanilla_ex))
names(log10alpha) <- vanilla_ex$gene
for (i in 1:nrow(vanilla_ex)){
  idx <- which.min(abs(log10mu[i]-fitted_trend$mu))
  log10alpha[i] <- fitted_trend$alpha[idx]
}
alpha <- 10^log10alpha

# use correlation from cscore
# ori_ests <- readRDS("marginal_fit/PNAS_NC_Oli_cscore_cor.rds")
ori_ests <- readRDS("marginal_fit/PNAS_NC_Oli_cscore_cor1000.rds")
filtered_ori_ests <- ori_ests$est
filtered_ori_ests[MatrixBH(ori_ests$p_value) > 0.05] <- 0
# filtered_ori_ests[filtered_ori_ests<0.1] <- 0
filtered_ori_ests[abs(filtered_ori_ests)<0.1] <- 0
sum(filtered_ori_ests!=0)/2

cor_mat <- (filtered_ori_ests+t(filtered_ori_ests))/2
simu_cscore_cor <- NB_copula(mu, gene_name, seq_depth, cell_name, alpha, 
                             cor_mat, ind=F, seed=11132023)
# saveRDS(simu_cscore_cor, "mean_cor/simu/PNAS_NC_Oli_cscore_cor_NB_simu.rds")
# saveRDS(simu_cscore_cor, "mean_cor/simu/PNAS_NC_Oli_cscore_cor_NB_simu1000.rds")
# saveRDS(simu_cscore_cor, "mean_cor/simu/PNAS_NC_Oli_cscore_cor_NB_simu1000_thresh.rds")
saveRDS(simu_cscore_cor, "mean_cor/simu/PNAS_NC_Oli_cscore_cor_NB_simu1000_abs_thresh.rds")

