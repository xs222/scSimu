library(pheatmap)
library(biomaRt)
library(dplyr)
library(tidyverse)
library(venn)
library(WGCNA)
library(clusterProfiler )
library(ggpubr)
setwd("/gpfs/gibbs/pi/zhao/xs282/validation/")

gene_name <- readRDS("marginal_fit/ROSMAP_NC_Ex_cor_gene.rds")
ori_ests <- matrix(NA, nrow = length(gene_name), ncol=length(gene_name),
                   dimnames = list(gene_name, gene_name))

marginal_fit_ROSMAP = readRDS('marginal_fit/ROSMAP_NC_Ex_marginal_fit.rds')
mu_ROSMAP <- marginal_fit_ROSMAP[gene_name,]$mu

ncor_gene <- length(gene_name)
mu_col_ROSMAP <- matrix(mu_ROSMAP,ncor_gene,ncor_gene,byrow = T)
mu_row_ROSMAP <- matrix(mu_ROSMAP,ncor_gene,ncor_gene)

tri = upper.tri(ori_ests, diag = FALSE)
idxs = which(tri, arr.ind = T)
estimate_ROSMAP <- data.frame(id1=rownames(ori_ests)[idxs[,1]],
                              id2=colnames(ori_ests)[idxs[,2]],
                              mu_col_ROSMAP=mu_col_ROSMAP[tri],
                              mu_row_ROSMAP=mu_row_ROSMAP[tri])
estimate_ROSMAP$log10mean_mu_ROSMAP <- log10(sqrt(10^estimate_ROSMAP$mu_col_ROSMAP*10^estimate_ROSMAP$mu_row_ROSMAP))
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
G_list <- getBM(filters= "hgnc_symbol", attributes= c("ensembl_gene_id","hgnc_symbol"),values=rownames(ori_ests),mart= mart)
G_list <- G_list %>% group_by(hgnc_symbol) %>%
  dplyr::slice(1) %>% ungroup()
unmapped <- rownames(ori_ests)[!rownames(ori_ests) %in% G_list$hgnc_symbol]
ensembl <- c(unmapped, G_list$ensembl_gene_id)
names(ensembl) <- c(unmapped, G_list$hgnc_symbol)
estimate_ROSMAP$id1 <- ensembl[estimate_ROSMAP$id1]
estimate_ROSMAP$id2 <- ensembl[estimate_ROSMAP$id2]
estimate_ROSMAP <- estimate_ROSMAP %>%
  mutate(grp = paste(pmax(id1, id2), pmin(id1, id2), sep = "_"))


# p-value based approach
p_val <- readRDS("real/ex/ROSMAP_Ex_norm_p.rds")
ROSMAP_est <- readRDS("real/ex/est_cor.rds")
p_val$cscore_p <- ROSMAP_est$cscore_p
ROSMAP_p_adj <- as.data.frame(apply(p_val, 2, function(x){p.adjust(x, method = "BH")}))

p_cor <- ROSMAP_p_adj<0.05
colSums(p_cor)

## the expression bias for identified correlated gene pairs
p_cor_exp <- cbind(p_cor, estimate_ROSMAP)


# # cor strength based approach - fixed threshold
# est_sub <- ROSMAP_est[c(10:13, 15:18)]
#
# rank_thresh <- 200000
# cor_strength_cor <- apply(est_sub, 2, function(x){
#   abs(x)>quantile(abs(x), 1-rank_thresh/length(x))
# })
# colSums(cor_strength_cor)

# cor strength based approach - variable threshold
ROSMAP_est <- readRDS("real/ex/est_cor.rds")
est_sub <- ROSMAP_est[c(10:13, 15:18)]
est_sub$cscore_p <- est_sub$cscore_est

rank_thresh <- colSums(p_cor)
names(rank_thresh) <- colnames(p_cor)
cor_strength_cor <- p_cor
for (i in colnames(p_cor)){
  cor_strength_cor[,i] <- abs(est_sub[,i])>quantile(abs(est_sub[,i]),
                                                    1-rank_thresh[i]/length(est_sub[,i]))
}

colSums(cor_strength_cor)

## the expression bias for identified correlated gene pairs
cor_strength_cor_exp <- cbind(cor_strength_cor, estimate_ROSMAP)



# venn diagram
par(mfrow=c(2, 4), mar = c(1,0.2,1,0.2))
for (i in colnames(p_cor)){
  my_ls <- list("p_val"=p_cor_exp$grp[p_cor_exp[,i]],
                "cor_str" = cor_strength_cor_exp$grp[cor_strength_cor_exp[,i]])
  venn(my_ls, main=i)
}



source("/gpfs/gibbs/pi/zhao/xs282/validation/real_data/cluster_function.R")
i <- "sct"
go_dat_p <- ROSMAP_est[,i]
common <- intersect(p_cor_exp$grp[p_cor_exp[,i]], cor_strength_cor_exp$grp[cor_strength_cor_exp[,i]])
go_dat_p[!p_cor[,i] | p_cor_exp$grp %in% common] <- 0
# go_dat_p[!p_cor[,i]] <- 0
sum(go_dat_p!=0)
summary(go_dat_p[go_dat_p!=0])

sct_mat_p <- upper2matrix(est=go_dat_p, gene_name)
sct_mat_p <- sct_mat_p*10
diag(sct_mat_p) <- 1
pheatmap(sct_mat_p)
# sum(rowSums(sct_mat_p)==1)



# powers = c(c(1:10), seq(from = 12, to=20, by=2))
# sft = pickSoftThreshold.fromSimilarity(abs(sct_mat_p), powerVector = powers, verbose = 0)
# sct_p_cluster = Clustering(abs(sct_mat_p), gene_name, type="unsigned", power = 1,
#                            TOM_clustering = T, deepSplit = 1, min_members = 20)
# pheatmap(sct_p_cluster$dist)
# sct_p_cluster = Clustering_cuttree(abs(sct_mat_p), gene_name, type="unsigned", power = 1,
#                            TOM_clustering = T, k=3)
sct_p_cluster = Clustering_hi(sct_mat_p, gene_name, deepSplit = 4, min_members = 10)
# sct_p_cluster = Clustering_hi_cuttree(sct_mat_p, gene_name, k = 10)

row_annotation <- data.frame(Mem = sct_p_cluster$memb)
rownames(row_annotation) <- names(sct_p_cluster$memb)
pheatmap(sct_mat_p[names(sort(sct_p_cluster$memb)),names(sort(sct_p_cluster$memb))],
         annotation_row = row_annotation, annotation_col = row_annotation,
         cluster_rows = FALSE, show_rownames = F,
         cluster_cols = FALSE, show_colnames = F)


i <- "sct"
go_dat_top <- ROSMAP_est[,i]
go_dat_top[!cor_strength_cor[,i] | cor_strength_cor_exp$grp %in% common] <- 0
# go_dat_top[!cor_strength_cor[,i]] <- 0
sum(go_dat_top!=0)
summary(go_dat_top[go_dat_top!=0])

sct_mat_top <- upper2matrix(est=go_dat_top, gene_name)
sct_mat_top <- sct_mat_top*10
diag(sct_mat_top) <- 1
pheatmap(sct_mat_top)

sct_top_cluster = Clustering(sct_mat_top, gene_name, type="signed", power = 2, TOM_clustering = T, deepSplit = 4)
sct_top_cluster = Clustering(abs(sct_mat_top), gene_name, type="unsigned", power = 2, TOM_clustering = T, deepSplit = 4)
sct_top_cluster = Clustering_hi(sct_mat_top, gene_name, deepSplit = 4, min_members = 15)


# significant
enrich_p_05 <- list()
enrich_p_05_plot <- list()
k <- 0
for (i in 1:max(sct_p_cluster$memb)){
  print(i)
  enrich_p_05[[i]] <- enrichGO(gene = sct_p_cluster$clusters[[i]], OrgDb = "org.Hs.eg.db",
                               keyType = "SYMBOL", ont = "ALL", pAdjustMethod = "BH",
                               universe = gene_name, pvalueCutoff = 0.05)
  if (length(enrich_p_05[[i]]@result$ONTOLOGY)!=0){
    k <- k+1
    enrich_p_05_plot[[k]] <- dotplot(enrich_p_05[[i]])+labs(title=i)
  }
}
length(enrich_p_05_plot)
ggarrange(plotlist = enrich_p_05_plot, ncol=2, nrow=2)

enrich_top_05 <- list()
enrich_top_05_toplot <- list()
k <- 0
for (i in 1:max(sct_top_cluster$memb)){
  print(i)
  enrich_top_05[[i]] <- enrichGO(gene = sct_top_cluster$clusters[[i]], OrgDb = "org.Hs.eg.db",
                                 keyType = "SYMBOL", ont = "ALL", pAdjustMethod = "BH",
                                 universe = gene_name, pvalueCutoff = 0.05)
  if (length(enrich_top_05[[i]]@result$ONTOLOGY)!=0){
    k <- k+1
    enrich_top_05_toplot[[k]] <- dotplot(enrich_top_05[[i]])+labs(title=i)
  }
}
length(enrich_top_05_toplot)
ggarrange(plotlist = enrich_top_05_toplot, ncol=2, nrow=1)


# count of shared go terms
go_data <- getBM(filters= "hgnc_symbol", attributes= c("hgnc_symbol", "go_id"),values=rownames(ori_ests),mart= mart)
go_list <- split(go_data$go_id, go_data$hgnc_symbol)

tri = upper.tri(ori_ests, diag = FALSE)
idxs = which(tri, arr.ind = T)
gene_pair <- data.frame(id1=rownames(ori_ests)[idxs[,1]],
                              id2=colnames(ori_ests)[idxs[,2]])

method <- c("sct", "ana_prn", "noise", "prn", "spr", "propr", "cscore_est", "cscore_p")
method2 <- c("sctransform", "Analytic PR", "Noise \nRegularization", "Pearson", "Spearman", "propr",
             "CS-CORE \n(Empirical)", "CS-CORE")
names(method2) <- c("sct", "ana_prn", "noise", "prn", "spr", "propr", "cscore_est", "cscore_p")

box_ls <- list()
for (i in method){
  common <- intersect(p_cor_exp$grp[p_cor_exp[,i]], cor_strength_cor_exp$grp[cor_strength_cor_exp[,i]])
  go_dat_p <- ROSMAP_est[,i]
  go_dat_p[!p_cor[,i] | p_cor_exp$grp %in% common] <- 0
  p_cor_list <- gene_pair[go_dat_p!=0,]
  p_cor_list$count <- apply(p_cor_list, 1, function(x){
    length(intersect(go_list[[x[1]]], go_list[[x[2]]]))
  })

  go_dat_top <- ROSMAP_est[,i]
  go_dat_top[!cor_strength_cor[,i] | cor_strength_cor_exp$grp %in% common] <- 0
  top_cor_list <- gene_pair[go_dat_top!=0,]
  top_cor_list$count <- apply(top_cor_list, 1, function(x){
    length(intersect(go_list[[x[1]]], go_list[[x[2]]]))
  })

  top_cor_list$group <- "Cor-strength"
  p_cor_list$group <- "P-value"
  comb_dat <-rbind(top_cor_list, p_cor_list)

  box_ls[[i]] <- ggplot(comb_dat, aes(x=group, y=count,fill=group))+
    geom_boxplot(alpha=0.5)+labs(title=method2[i], x="", fill="")+theme_bw()+
    scale_fill_manual(values = c("P-value"="darkblue", "Cor-strength"="darkred"))+
    theme(plot.title = element_text(hjust=0.5),legend.position = "bottom")
}
ggarrange(plotlist = box_ls, ncol=4, nrow = 2, common.legend = T, legend = "bottom")

legend <- get_legend(box_ls[[1]])
adjusted_theme <- theme(text = element_text(size = 17), legend.position = "none",
                        plot.margin = unit(c(0, 0.15, 0, 0), "cm"),
                        title =element_text(size=12),
                        plot.tag = element_text(size = 14, face = "bold", vjust = 1.3, hjust = -1.5),
                        plot.tag.position = c(0,1),)

plot_grid <- plot_grid(box_ls[[2]]+labs(tag="A")+adjusted_theme, box_ls[[8]]+labs(tag="B")+adjusted_theme,
                       box_ls[[7]]+labs(tag="C")+adjusted_theme, box_ls[[3]]+labs(tag="D")+adjusted_theme,
                       box_ls[[4]]+labs(tag="E")+adjusted_theme, box_ls[[6]]+labs(tag="F")+adjusted_theme,
                       box_ls[[1]]+labs(tag="G")+adjusted_theme, box_ls[[5]]+labs(tag="H")+adjusted_theme,
                       ncol = 4, nrow = 2, align = "hv")

final_plot_with_labels <- ggdraw() +
  draw_plot(plot_grid)

# Print the final plot
print(final_plot_with_labels)

pdf('real_data/ex_shared_GO_boxplot_05_v2.pdf', width = 12, height = 6.5, onefile = T)
print(final_plot_with_labels)
dev.off()

# all GO
enrich_p <- list()
for (i in 1:max(sct_p_cluster$memb)){
  print(i)
  enrich_p[[i]] <- enrichGO(gene = sct_p_cluster$clusters[[i+1]], OrgDb = "org.Hs.eg.db",
           keyType = "SYMBOL", ont = "ALL", pAdjustMethod = "BH",
           universe = gene_name, pvalueCutoff = 1)
}

enrich_p_plot <- list()
k <- 0
for (i in 1:max(sct_p_cluster$memb)){
  if (length(enrich_p[[i]]@result$ONTOLOGY)!=0){
    k <- k+1
    enrich_p_plot[[k]] <- dotplot(enrich_p[[i]])+labs(title=i)
  }
}
length(enrich_p_plot)
ggarrange(plotlist = enrich_p_plot, ncol=3, nrow=2)

enrich_top <- list()
for (i in 1:max(sct_top_cluster$memb)){
  print(i)
  enrich_top[[i]] <- enrichGO(gene = sct_top_cluster$clusters[[i+1]], OrgDb = "org.Hs.eg.db",
                            keyType = "SYMBOL", ont = "ALL", pAdjustMethod = "BH",
                            universe = gene_name, pvalueCutoff = 1)
}

enrich_top_toplot <- list()
k <- 0
for (i in 1:max(sct_top_cluster$memb)){
  if (length(enrich_top[[i]]@result$ONTOLOGY)!=0){
    k <- k+1
    enrich_top_toplot[[k]] <- dotplot(enrich_top[[i]])+labs(title=i)
  }
}
length(enrich_top_toplot)
ggarrange(plotlist = enrich_top_toplot, ncol=2, nrow=1)

