
library(dplyr)
library(optparse)
library(SingleCellExperiment)


option_list <- list(
  make_option(c("--path"), type="character", 
              help="real data path", metavar="character",
              default="compare_simulation/compare_simu_multi_data/PNAS_NC/PNAS_NC_EX_sel5000.rds")
)
opt_parser <- OptionParser(option_list=option_list);
opt <- parse_args(opt_parser);

data_path <- opt$path
data_name <- basename(data_path)
prefix <- gsub(data_name, "", data_path)
data_name <- gsub(".rds", "", data_name)
setwd("/gpfs/gibbs/pi/zhao/xs282/validation/")


# read real data ----------------------------------------------------------------
ori_ct <- readRDS(data_path)
sce <- SingleCellExperiment(assays = list(counts = ori_ct))
sce$celltype <- "TypeI"

time_table <- matrix(NA, nrow=1, ncol=2)
path <- paste0(prefix, data_name,"/")
if(!file.exists(path)){
  dir.create(path,recursive = T)
}

# muscat -----------------------------------------------------------------------
# https://bioconductor.org/packages/release/bioc/vignettes/muscat/inst/doc/simulation.html#simdata-simulating-complex-designs
print("muscat ----------------------------------------------------------------------------")
library(muscat)

if (grepl("PNAS", data_name)){
  meta <- read.csv("compare_simulation/compare_simu_multi_data/PNAS_NC/PNAS_NC_meta.csv")
  sampleID <- meta$orig.ident
  names(sampleID) <- meta$X
} else if (grepl("ROSMAP", data_name)){
  meta <- read.csv(paste0("compare_simulation/compare_simu_multi_data/ROSMAP/", data_name, "_meta.csv"),row.names = 1)
  sampleID <- meta$projid
  names(sampleID) <- rownames(meta)
}

set.seed(10212023)
muscat_start_time <- Sys.time()

sce$cluster_id <- "1"
sce$sample_id <- sampleID[colnames(sce)]
sce$group_id <- "control"
ref <- prepSim(sce,min_size = NULL)
sim <- simData(ref, dd = FALSE)

muscat_end_time <- Sys.time()
saveRDS(sim, paste0(path,data_name,"_muscat.rds"))
time_table[1,] <- c("muscat", difftime(muscat_end_time,muscat_start_time, units="secs"))

saveRDS(time_table, paste0(path,"time_muscat.rds"))

